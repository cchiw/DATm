Started July 18, 2017
vis15 branch err marks

***rtn:compile __p_o13_o19_o9_t53_t2_tN__l3 			fixed 
***rtn:compile __p_o7_o17_o5_t4_t18_tN__l3:			fixed
-p_o20_o25_o17_t14_tN_tN_t1__l3: 				fixed by an earlier error
__p_o17_o17_o5_t36_t12_tN__l3: 					fixed by an earlier error
__p_o17_o18_o5_t54_t6_tN__l3  					fixed by an earlier error
p_o15_o18_o5_t36_t12_tN__l3:					datm needs to create another inside test.
	(test used the inverse as a second arg) and program should check if det is a small number
***rtn:compile __p_o12_o19_o9_t39_t13_tN__l3			fixed
***rtn:compile __p_o0_o19_o9_t13_t13_tN__l3			fixed by an earlier error
***rtn:compile __p_o13_o19_o9_t11_t20_tN__l3    		fixed by an earlier error


***rtn:terrible__p_o18_o13_o11_t20_t23_tN__l3			fixed by an earlier error	
***rtn:compile __p_o12_o19_o9_t53_t2_tN__l3			fixed by an earlier error
***rtn:compile __p_o12_o19_o9_t53_t20_tN__l3			fixed by an earlier error 
***rtn:terrible__p_o13_o7_o10_t39_tN_tN__l3			fixed by an earlier error
***rtn:terrible__p_o7_o11_o7_t20_tN_tN__l3
——————***rtn:terrible__p_o14_o16_o7_t7_t23_tN__l3		division is very small number. floating point error. sometimes pass/fail
——————————————————————————————————————————————————————	


***rtn:terrible__p_o7_o11_o7_t20_tN_tN__l3
	 -: normalize(jacob(normalize))
	-
-p_o7_o11_o7_t20_tN_tN__l3 normalize(jacob(normalize))| F_v3_d3| 
		Rst: Z-3 RD  max diff: 0.5774 sumdiff: 0.0608 100.0% c:0 o:0.57735026
	rtn:terrible

sometimes passes


***rtn:terrible__p_o14_o16_o7_t7_t23_tN__l3
	 -: normalize(inner_product(cross_product))
	-
-p_o14_o16_o7_t7_t23_tN__l3 normalize(inner_product(cross_product))| F_v3_d3,T_v3,F_m3x3_d3| 
		Rst: Z-3 RD  max diff: 1.1547 sumdiff: 0.165 200.0% c:-0.333333333333333*sqrt(3) o:0.57735026
	rtn:terrible


—————————————————————————————————————————————————————————————	
error in both branches
———————————————————————————————							   

***rtn:compile __p_o13_o19_o9_t53_t2_tN__l3
	        -: div(modulate(subtraction))
		-_F_v3_d3,F_v3_d3,T_v3 |p_o13_o19_o9_t53_t2_tN__l3
		rtn:compile 

works for ein16 but not vis15 or chiw17

field#3(3)[]G = ∇•(modulate(((F0)-(F1)),(F2)));

 expand tensor[3] op1_e3_l_10=λ(T0[3 3],T1[3 3])<(T0_{i0,i0}) - (T1_{i0,i0})>_{3}tensor[3,3]tensor[3,3]MidToLow.expand: error converting λ(T0[3 3],T1[3 3])<(T0_{i0,i0}) - (T1_{i0,i0})>_{3}(probe_l_8,probe_l_9)
uncaught exception Fail [Fail: alphaToIdxs(_, V 0): out of bounds]
  raised at common/phase-timer.sml:78.57-78.59
  raised at mid-to-low/mid-to-low.sml:232.29-232.31
  raised at mid-to-low/ein-to-vector.sml:67.35-67.105
0.295845985413


solution:
when using a vector operation must make sure index being projected isn’t repeated in the tensor term.



***rtn:compile __p_o12_o19_o9_t39_t13_tN__l3
	 -: div(modulate(addition))
	-_F_v2_d2,F_v2_d2,F_v2_d2 |p_o12_o19_o9_t39_t13_tN__l3
	rtn:compile 

solution:
when using a vector operation must make sure index being projected isn’t repeated in the tensor term. (except for addition)


———————————————————————————————	
***rtn:compile __p_o7_o17_o5_t4_t18_tN__l3
	        -: inverse(multiplication(normalize))
		-_T_m2x2,F_s_d3 |p_o7_o17_o5_t4_t18_tN__l3
		rtn:compile 
works for chiw17  but not for vis15

uncaught exception Fail [Fail: too many steps]
  raised at common/phase-timer.sml:78.57-78.59
  raised at common/phase-timer.sml:78.57-78.59
  raised at high-opt/normalize-ein.sml:262.58-262.79
0.0856318473816


***rtn:compile __p_o7_o17_o5_t4_t18__l3
	 -: inverse(multiplication(normalize))
	-_T_m2x2,F_s_d3 |p_o7_o17_o5_t4_t18__l3
	rtn:compile 


solution:
Infinite rewrites.A rewrite was creating a product to rewrite a subterm but then wrapped it inside another product. The filter product was continuously flattening the product.
—————————————————————————————————————————————————————————————		
